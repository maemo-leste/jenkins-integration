#!/bin/sh

REPO_BASE="${REPO_BASE:-/srv/repository/leste}"

usage() {
    cat <<EOF >&2
usage: $(basename "$0") [-v] [repo1] [repo2]

	-v	show package versions
	-m	list packages in repo2 but missing from repo1

Environment:
    REPO_BASE: path to repo base (default: $REPO_BASE)

Output:
    >foo : package is newer in repo1
    <foo : package is newer in repo2
EOF
    exit 1
}

for i in $@; do
	case "$1" in
	-v)
		vflag=1
		shift
		;;
	-m)
		mflag=1
		shift
		;;
	-*)
		usage
		;;
	esac
done

if [ -z "$1" ] || [ -z "$2" ]; then
    usage
fi

# Use tempfiles because it's cleaner, and no need for bashism
l1="$(mktemp XXXX.txt)"
l2="$(mktemp XXXX.txt)"

if ! [ "$mflag" = 1 ]; then
	reprepro -b "$REPO_BASE" list "$1" | cut -d' ' -f2- | sort | uniq > "$l1" || exit 1
	reprepro -b "$REPO_BASE" list "$2" | cut -d' ' -f2- | sort | uniq > "$l2" || exit 1

	join --nocheck-order "$l1" "$l2" | while read -r package firstver secondver; do
	    if dpkg --compare-versions "$firstver" lt "$secondver"; then
			if [ -n "$vflag" ]; then
				echo "<$package $firstver < $secondver"
			else
				echo "<$package"
			fi
	    else
			if [ -n "$vflag" ]; then
				echo ">$package $firstver > $secondver"
			else
				echo ">$package"
			fi
	    fi
	done
fi

if [ "$mflag" = 1 ]; then
	reprepro -b "$REPO_BASE" list "$1" | cut -d' ' -f2 | sort -u > "$l1" || exit 1
	reprepro -b "$REPO_BASE" list "$2" | cut -d' ' -f2 | sort -u > "$l2" || exit 1

	diff --new-line-format="" --unchanged-line-format="" "$l1" "$l2"
fi

rm -f "$l1" "$l2"
